'use strict'

export function makeAPromise(message, seconds = 2){
	return new Promise((resolve, reject) => {
		let past 		= now()
			, future 	= past + seconds * 1000
			, interval = setInterval(() => {
					if (now() >= future) {
						clearInterval(interval)
						resolve('Yep! This has been promised and now it is done! :)', message)
					}
				}, 100)
	})
}

export function wait(seconds, message='Asyncronous task completed'){
	let started = now()

  return new Promise((resolve, reject) => {
  	setTimeout(() => {
  		let duration = (now() - started) / 1000
  		resolve({message, duration})
  	}, seconds * 1000)
  })
}

function now(){
	return new Date().getTime()
}